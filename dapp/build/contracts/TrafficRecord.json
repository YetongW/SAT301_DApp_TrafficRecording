{
  "contractName": "TrafficRecord",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "vehicleRegistered",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_Identification",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_CollisionCount",
          "type": "uint256"
        }
      ],
      "name": "registerVehicle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_EDRInfo",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_CollisionCount",
          "type": "uint256"
        }
      ],
      "name": "addNewEDRInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "viewRecord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "CollisionCount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "Identification",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "EDRInfo",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"vehicleRegistered\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_EDRInfo\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_CollisionCount\",\"type\":\"uint256\"}],\"name\":\"addNewEDRInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Identification\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_CollisionCount\",\"type\":\"uint256\"}],\"name\":\"registerVehicle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"CollisionCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Identification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"EDRInfo\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addNewEDRInfo(string,uint256)\":{\"details\":\"Add new EDRInfo to a registered Vehicle (only one inforamtion at a time)\",\"params\":{\"_EDRInfo\":\"Information related to event recorder\"}},\"registerVehicle(string,uint256)\":{\"details\":\"Registers a user as Vehicle\",\"params\":{\"_CollisionCount\":\"happend count of collision\",\"_Identification\":\"unique Identification of the vehicle\"}},\"viewRecord()\":{\"details\":\"View record of the Vehicle only by itself\",\"return\":\"id Id of the Vehicle structCollisionCount  collsions count of the Vehicle accidentIdentification Identification of the VehicleEDRInfo All the EDRInfo of the Vehicle\"}},\"title\":\"Traffic Record. \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TrafficRecord.sol\":\"TrafficRecord\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TrafficRecord.sol\":{\"keccak256\":\"0x27e5c5c922c1362e498104384492e6c8a3efbe27b932e90afa8480dc760785c4\",\"urls\":[\"bzz-raw://2bfc8311eaf5fe0abc866b8569d81e795df3bb35aedc5ebb9255ddf91fd13845\",\"dweb:/ipfs/QmSFMNxpLWtcMQoagtv12EAyr4TcDqoJzai3w5gRywNqUd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636a4121691461004657806382ac03071461010b578063f01319ed146101d0575b600080fd5b6101096004803603604081101561005c57600080fd5b810190808035906020019064010000000081111561007957600080fd5b82018360208201111561008b57600080fd5b803590602001918460018302840111640100000000831117156100ad57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506102cd565b005b6101ce6004803603604081101561012157600080fd5b810190808035906020019064010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061050a565b005b6101d86107a9565b604051808581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561022857808201518184015260208101905061020d565b50505050905090810190601f1680156102555780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561028e578082015181840152602081019050610273565b50505050905090810190601f1680156102bb5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f204e6f742072656769737465726564000000000000000000000000000000000081525060200191505060405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906103e3929190610ab6565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550806001806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154038154811061047b57fe5b906000526020600020906005020160020181905550816001806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403815481106104e157fe5b90600052602060002090600502016003019080519060200190610505929190610ab6565b505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f20416c726561647920726567697374657265640000000000000000000000000081525060200191505060405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600260008154809291906001019190505550600254816000018190555082816001019080519060200190610643929190610ab6565b5081816002018190555060018160040160006101000a81548160ff02191690831515021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820154816000015560018201816001019080546001816001161561010002031660029004610706929190610b36565b506002820154816002015560038201816003019080546001816001161561010002031660029004610738929190610b36565b506004820160009054906101000a900460ff168160040160006101000a81548160ff0219169083151502179055505050507f992531bdeb276656dca6745b2d37b371ec7566cbd8eee0218f2fb7618c90d90781600001546040518082815260200191505060405180910390a1505050565b6000806060806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f204e6f742072656769737465726564000000000000000000000000000000000081525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015493506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015492506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109cd5780601f106109a2576101008083540402835291602001916109cd565b820191906000526020600020905b8154815290600101906020018083116109b057829003601f168201915b505050505091506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b5050505050905090919293565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610af757805160ff1916838001178555610b25565b82800160010185558215610b25579182015b82811115610b24578251825591602001919060010190610b09565b5b509050610b329190610bbd565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b6f5780548555610bac565b82800160010185558215610bac57600052602060002091601f016020900482015b82811115610bab578254825591600101919060010190610b90565b5b509050610bb99190610bbd565b5090565b610bdf91905b80821115610bdb576000816000905550600101610bc3565b5090565b9056fea265627a7a723158208dfbf8d6324597e6e2d059c7efa9e3d88c3d22f5a748c0ba91fa9c48fbde993164736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80636a4121691461004657806382ac03071461010b578063f01319ed146101d0575b600080fd5b6101096004803603604081101561005c57600080fd5b810190808035906020019064010000000081111561007957600080fd5b82018360208201111561008b57600080fd5b803590602001918460018302840111640100000000831117156100ad57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506102cd565b005b6101ce6004803603604081101561012157600080fd5b810190808035906020019064010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061050a565b005b6101d86107a9565b604051808581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561022857808201518184015260208101905061020d565b50505050905090810190601f1680156102555780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561028e578082015181840152602081019050610273565b50505050905090810190601f1680156102bb5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f204e6f742072656769737465726564000000000000000000000000000000000081525060200191505060405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906103e3929190610ab6565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550806001806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154038154811061047b57fe5b906000526020600020906005020160020181905550816001806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403815481106104e157fe5b90600052602060002090600502016003019080519060200190610505929190610ab6565b505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f20416c726561647920726567697374657265640000000000000000000000000081525060200191505060405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600260008154809291906001019190505550600254816000018190555082816001019080519060200190610643929190610ab6565b5081816002018190555060018160040160006101000a81548160ff02191690831515021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820154816000015560018201816001019080546001816001161561010002031660029004610706929190610b36565b506002820154816002015560038201816003019080546001816001161561010002031660029004610738929190610b36565b506004820160009054906101000a900460ff168160040160006101000a81548160ff0219169083151502179055505050507f992531bdeb276656dca6745b2d37b371ec7566cbd8eee0218f2fb7618c90d90781600001546040518082815260200191505060405180910390a1505050565b6000806060806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f204e6f742072656769737465726564000000000000000000000000000000000081525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015493506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015492506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109cd5780601f106109a2576101008083540402835291602001916109cd565b820191906000526020600020905b8154815290600101906020018083116109b057829003601f168201915b505050505091506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b5050505050905090919293565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610af757805160ff1916838001178555610b25565b82800160010185558215610b25579182015b82811115610b24578251825591602001919060010190610b09565b5b509050610b329190610bbd565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b6f5780548555610bac565b82800160010185558215610bac57600052602060002091601f016020900482015b82811115610bab578254825591600101919060010190610b90565b5b509050610bb99190610bbd565b5090565b610bdf91905b80821115610bdb576000816000905550600101610bc3565b5090565b9056fea265627a7a723158208dfbf8d6324597e6e2d059c7efa9e3d88c3d22f5a748c0ba91fa9c48fbde993164736f6c63430005100032",
  "sourceMap": "100:2640:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:2640:0;;;;;;;",
  "deployedSourceMap": "100:2640:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:2640:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:373;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1682:373:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1682:373:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1682:373:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1682:373:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1682:373:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;976:519;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;976:519:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;976:519:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;976:519:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;976:519:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;976:519:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2372:363;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2372:363:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2372:363:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:373;710:8;:20;719:10;710:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;702:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:8;1782;:20;1791:10;1782:20;;;;;;;;;;;;;;;:28;;:39;;;;;;;;;;;;:::i;:::-;;1870:15;1832:8;:20;1841:10;1832:20;;;;;;;;;;;;;;;:35;;:53;;;;1957:15;1896:14;1937:1;1911:8;:20;1920:10;1911:20;;;;;;;;;;;;;;;:23;;;:27;1896:43;;;;;;;;;;;;;;;;;;:58;;:76;;;;2037:8;1983:14;2024:1;1998:8;:20;2007:10;1998:20;;;;;;;;;;;;;;;:23;;;:27;1983:43;;;;;;;;;;;;;;;;;;:51;;:62;;;;;;;;;;;;:::i;:::-;;1682:373;;:::o;976:519::-;1082:8;:20;1091:10;1082:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;1081:32;1073:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:23;1173:8;:20;1182:10;1173:20;;;;;;;;;;;;;;;1147:46;;1204:10;;:12;;;;;;;;;;;;;1240:10;;1227:7;:10;;:23;;;;1286:15;1261:7;:22;;:40;;;;;;;;;;;;:::i;:::-;;1337:15;1312:7;:22;;:40;;;;1384:4;1363:7;:18;;;:25;;;;;;;;;;;;;;;;;;1399:14;1419:8;:20;1428:10;1419:20;;;;;;;;;;;;;;;1399:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1399:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:29;1474:7;:10;;;1456:29;;;;;;;;;;;;;;;;;;976:519;;;:::o;2372:363::-;2426:7;2434:19;2454:28;2483:21;710:8;:20;719:10;710:20;;;;;;;;;;;;;;;:31;;;;;;;;;;;;702:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:8;:20;2533:10;2524:20;;;;;;;;;;;;;;;:23;;;2519:28;;2576:8;:20;2585:10;2576:20;;;;;;;;;;;;;;;:35;;;2559:52;;2640:8;:20;2649:10;2640:20;;;;;;;;;;;;;;;:35;;2623:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:8;:20;2706:10;2697:20;;;;;;;;;;;;;;;:28;;2687:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2372:363;;;;:::o;100:2640::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.21 <0.9.0;\r\n\r\n/** @title Traffic Record. */\r\ncontract TrafficRecord{\r\n\r\n    // a struct for vehicle storing Id,Identification, collision happend count ,EDRInfo and boolean to check if it is registered\r\n    struct Vehicle{\r\n        uint Id;\r\n        string Identification;\r\n        uint CollisionCount;\r\n        string EDRInfo;\r\n        bool Registered;\r\n    }\r\n\r\n    // mapping to map each struct with the address\r\n    mapping(address => Vehicle) vehicles;\r\n\r\n    Vehicle[] vehicle_record;\r\n\r\n    uint vehicle_id;\r\n\r\n    // events to record some data\r\n    event vehicleRegistered(uint id);\r\n\r\n    // modifiers \r\n    modifier onlyVehicle{\r\n        require(vehicles[msg.sender].Registered,\" Not registered\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n        @dev Registers a user as Vehicle\r\n        @param _Identification  unique Identification of the vehicle\r\n        @param _CollisionCount happend count of collision\r\n    */\r\n    function registerVehicle(string memory _Identification,uint _CollisionCount) public {\r\n\r\n        require(!vehicles[msg.sender].Registered,\" Already registered\");\r\n        Vehicle storage vehicle = vehicles[msg.sender];\r\n        vehicle_id++;\r\n        vehicle.Id = vehicle_id;\r\n        vehicle.Identification = _Identification;\r\n        vehicle.CollisionCount = _CollisionCount;\r\n        vehicle.Registered = true;\r\n        vehicle_record.push(vehicles[msg.sender]);\r\n        emit vehicleRegistered(vehicle.Id);\r\n\r\n    }\r\n\r\n    /**\r\n        @dev Add new EDRInfo to a registered Vehicle (only one inforamtion at a time)\r\n        @param _EDRInfo Information related to event recorder\r\n        \r\n    */\r\n      function addNewEDRInfo(string memory _EDRInfo, uint _CollisionCount) public onlyVehicle{\r\n\r\n        vehicles[msg.sender].EDRInfo = _EDRInfo;\r\n        vehicles[msg.sender].CollisionCount = _CollisionCount;\r\n        vehicle_record[vehicles[msg.sender].Id - 1].CollisionCount = _CollisionCount;\r\n        vehicle_record[vehicles[msg.sender].Id - 1].EDRInfo = _EDRInfo;\r\n\r\n    }\r\n\r\n    /**\r\n        @dev View record of the Vehicle only by itself\r\n        @return id Id of the Vehicle struct\r\n        @return CollisionCount  collsions count of the Vehicle accident\r\n        @return Identification Identification of the Vehicle\r\n        @return EDRInfo All the EDRInfo of the Vehicle\r\n    */\r\n    function viewRecord() public view onlyVehicle returns(uint id,uint CollisionCount,string memory Identification,string memory EDRInfo){\r\n\r\n         id = vehicles[msg.sender].Id;\r\n         CollisionCount = vehicles[msg.sender].CollisionCount;\r\n         Identification = vehicles[msg.sender].Identification;\r\n         EDRInfo = vehicles[msg.sender].EDRInfo;\r\n\r\n    }\r\n\r\n}",
  "sourcePath": "/home/ytw/dapp/contracts/TrafficRecord.sol",
  "ast": {
    "absolutePath": "project:/contracts/TrafficRecord.sol",
    "exportedSymbols": {
      "TrafficRecord": [
        203
      ]
    },
    "id": 204,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Traffic Record. ",
        "fullyImplemented": true,
        "id": 203,
        "linearizedBaseContracts": [
          203
        ],
        "name": "TrafficRecord",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TrafficRecord.Vehicle",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "Id",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "286:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "Identification",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "304:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "name": "CollisionCount",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "336:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "336:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "EDRInfo",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "366:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "366:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "Registered",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "391:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Vehicle",
            "nodeType": "StructDefinition",
            "scope": 203,
            "src": "261:153:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "vehicles",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "474:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
              "typeString": "mapping(address => struct TrafficRecord.Vehicle)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "474:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                "typeString": "mapping(address => struct TrafficRecord.Vehicle)"
              },
              "valueType": {
                "contractScope": null,
                "id": 14,
                "name": "Vehicle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 12,
                "src": "493:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                  "typeString": "struct TrafficRecord.Vehicle"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "vehicle_record",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "519:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Vehicle_$12_storage_$dyn_storage",
              "typeString": "struct TrafficRecord.Vehicle[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 17,
                "name": "Vehicle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 12,
                "src": "519:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                  "typeString": "struct TrafficRecord.Vehicle"
                }
              },
              "id": 18,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "519:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Vehicle_$12_storage_$dyn_storage_ptr",
                "typeString": "struct TrafficRecord.Vehicle[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "name": "vehicle_id",
            "nodeType": "VariableDeclaration",
            "scope": 203,
            "src": "552:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "552:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "vehicleRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "635:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "634:9:0"
            },
            "src": "611:33:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "691:89:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "vehicles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "710:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                              "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                            }
                          },
                          "id": 31,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 29,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "719:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "719:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "710:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                            "typeString": "struct TrafficRecord.Vehicle storage ref"
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Registered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "710:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "204e6f742072656769737465726564",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "742:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f08d6ab77d019ac45c192ff53f640c0a1221f7db1c578cc2fc5cc5157738d5f1",
                          "typeString": "literal_string \" Not registered\""
                        },
                        "value": " Not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f08d6ab77d019ac45c192ff53f640c0a1221f7db1c578cc2fc5cc5157738d5f1",
                          "typeString": "literal_string \" Not registered\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        221,
                        222
                      ],
                      "referencedDeclaration": 222,
                      "src": "702:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "702:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "702:58:0"
                },
                {
                  "id": 36,
                  "nodeType": "PlaceholderStatement",
                  "src": "771:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "name": "onlyVehicle",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:0"
            },
            "src": "671:109:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1060:435:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1081:32:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "vehicles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1082:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                                "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                              }
                            },
                            "id": 49,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 47,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "1091:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1091:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1082:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                              "typeString": "struct TrafficRecord.Vehicle storage ref"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Registered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1082:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "20416c72656164792072656769737465726564",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1114:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_045cf00bc6c7d8294343d975c3a4a3e2c32bc18446fad6f0a4ff71f29a1170d5",
                          "typeString": "literal_string \" Already registered\""
                        },
                        "value": " Already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_045cf00bc6c7d8294343d975c3a4a3e2c32bc18446fad6f0a4ff71f29a1170d5",
                          "typeString": "literal_string \" Already registered\""
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        221,
                        222
                      ],
                      "referencedDeclaration": 222,
                      "src": "1073:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:63:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "vehicle",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "1147:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                        "typeString": "struct TrafficRecord.Vehicle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 55,
                        "name": "Vehicle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 12,
                        "src": "1147:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                          "typeString": "struct TrafficRecord.Vehicle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "vehicles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1173:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                        "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                      }
                    },
                    "id": 60,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "1182:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1182:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1173:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                      "typeString": "struct TrafficRecord.Vehicle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1147:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1204:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "vehicle_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1204:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "vehicle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                          "typeString": "struct TrafficRecord.Vehicle storage pointer"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "1227:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "vehicle_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1240:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1227:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "vehicle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1261:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                          "typeString": "struct TrafficRecord.Vehicle storage pointer"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Identification",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1261:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_Identification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1286:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1261:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "vehicle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                          "typeString": "struct TrafficRecord.Vehicle storage pointer"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "CollisionCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1312:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "_CollisionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1337:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1312:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "vehicle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1363:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                          "typeString": "struct TrafficRecord.Vehicle storage pointer"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1363:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1363:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1419:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 95,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "1428:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1428:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1419:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "vehicle_record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1399:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vehicle_$12_storage_$dyn_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref[] storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1399:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Vehicle_$12_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct TrafficRecord.Vehicle storage ref) returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:41:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 99,
                          "name": "vehicle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1474:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vehicle_$12_storage_ptr",
                            "typeString": "struct TrafficRecord.Vehicle storage pointer"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "1474:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98,
                      "name": "vehicleRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1456:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "EmitStatement",
                  "src": "1451:34:0"
                }
              ]
            },
            "documentation": "@dev Registers a user as Vehicle\n@param _Identification  unique Identification of the vehicle\n@param _CollisionCount happend count of collision",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerVehicle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "_Identification",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1001:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "_CollisionCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1031:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1000:52:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:0:0"
            },
            "scope": 203,
            "src": "976:519:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1769:286:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1782:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 116,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "1791:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1791:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1782:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "EDRInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1782:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "_EDRInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "1813:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1782:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1832:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "1841:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1841:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1832:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "CollisionCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1832:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "_CollisionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1870:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1832:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "vehicle_record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1896:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vehicle_$12_storage_$dyn_storage",
                            "typeString": "struct TrafficRecord.Vehicle storage ref[] storage ref"
                          }
                        },
                        "id": 137,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 130,
                                "name": "vehicles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1911:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                                  "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                                }
                              },
                              "id": 133,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 218,
                                  "src": "1920:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1920:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1911:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                                "typeString": "struct TrafficRecord.Vehicle storage ref"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "1911:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1937:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1911:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1896:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "CollisionCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1896:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 139,
                      "name": "_CollisionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1957:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1896:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:76:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 142,
                          "name": "vehicle_record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1983:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vehicle_$12_storage_$dyn_storage",
                            "typeString": "struct TrafficRecord.Vehicle storage ref[] storage ref"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 143,
                                "name": "vehicles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1998:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                                  "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                                }
                              },
                              "id": 146,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 144,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 218,
                                  "src": "2007:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2007:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1998:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                                "typeString": "struct TrafficRecord.Vehicle storage ref"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "1998:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2024:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1998:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1983:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "EDRInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1983:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "_EDRInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "2037:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1983:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:62:0"
                }
              ]
            },
            "documentation": "@dev Add new EDRInfo to a registered Vehicle (only one inforamtion at a time)\n@param _EDRInfo Information related to event recorder",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 110,
                  "name": "onlyVehicle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 38,
                  "src": "1758:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1758:11:0"
              }
            ],
            "name": "addNewEDRInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "_EDRInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1705:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "_CollisionCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1729:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1704:46:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:0"
            },
            "scope": 203,
            "src": "1682:373:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2505:230:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2519:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2524:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2533:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2533:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2524:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "Id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "2524:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2519:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "CollisionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2559:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2576:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 181,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2585:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2585:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2576:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CollisionCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "2576:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2559:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "Identification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2623:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 186,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2640:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 189,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2649:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2649:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2640:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "Identification",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2640:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2623:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "EDRInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2687:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2697:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vehicle_$12_storage_$",
                            "typeString": "mapping(address => struct TrafficRecord.Vehicle storage ref)"
                          }
                        },
                        "id": 197,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2706:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2706:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2697:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                          "typeString": "struct TrafficRecord.Vehicle storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "EDRInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2697:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2687:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:38:0"
                }
              ]
            },
            "documentation": "@dev View record of the Vehicle only by itself\n@return id Id of the Vehicle struct\n@return CollisionCount  collsions count of the Vehicle accident\n@return Identification Identification of the Vehicle\n@return EDRInfo All the EDRInfo of the Vehicle",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 159,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 158,
                  "name": "onlyVehicle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 38,
                  "src": "2406:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2406:11:0"
              }
            ],
            "name": "viewRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2391:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2426:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "CollisionCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2434:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "Identification",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2454:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "EDRInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2483:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2425:80:0"
            },
            "scope": 203,
            "src": "2372:363:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 204,
        "src": "100:2640:0"
      }
    ],
    "src": "33:2707:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/TrafficRecord.sol",
      "exportedSymbols": {
        "TrafficRecord": [
          203
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title Traffic Record. ",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            203
          ],
          "name": "TrafficRecord",
          "scope": 204
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "TrafficRecord.Vehicle",
              "name": "Vehicle",
              "scope": 203,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "Id",
                  "scope": 12,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "286:4:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "286:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "Identification",
                  "scope": 12,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "304:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "304:21:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "CollisionCount",
                  "scope": 12,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "336:4:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "336:19:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "EDRInfo",
                  "scope": 12,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "366:6:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "366:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "Registered",
                  "scope": 12,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 10,
                    "name": "ElementaryTypeName",
                    "src": "391:4:0"
                  }
                ],
                "id": 11,
                "name": "VariableDeclaration",
                "src": "391:15:0"
              }
            ],
            "id": 12,
            "name": "StructDefinition",
            "src": "261:153:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "vehicles",
              "scope": 203,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct TrafficRecord.Vehicle)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct TrafficRecord.Vehicle)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 13,
                    "name": "ElementaryTypeName",
                    "src": "482:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Vehicle",
                      "referencedDeclaration": 12,
                      "type": "struct TrafficRecord.Vehicle"
                    },
                    "id": 14,
                    "name": "UserDefinedTypeName",
                    "src": "493:7:0"
                  }
                ],
                "id": 15,
                "name": "Mapping",
                "src": "474:27:0"
              }
            ],
            "id": 16,
            "name": "VariableDeclaration",
            "src": "474:36:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "vehicle_record",
              "scope": 203,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct TrafficRecord.Vehicle[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct TrafficRecord.Vehicle[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Vehicle",
                      "referencedDeclaration": 12,
                      "type": "struct TrafficRecord.Vehicle"
                    },
                    "id": 17,
                    "name": "UserDefinedTypeName",
                    "src": "519:7:0"
                  }
                ],
                "id": 18,
                "name": "ArrayTypeName",
                "src": "519:9:0"
              }
            ],
            "id": 19,
            "name": "VariableDeclaration",
            "src": "519:24:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "vehicle_id",
              "scope": 203,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 20,
                "name": "ElementaryTypeName",
                "src": "552:4:0"
              }
            ],
            "id": 21,
            "name": "VariableDeclaration",
            "src": "552:15:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "vehicleRegistered"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "id",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "635:4:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "635:7:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "634:9:0"
              }
            ],
            "id": 25,
            "name": "EventDefinition",
            "src": "611:33:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyVehicle",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 26,
                "name": "ParameterList",
                "src": "691:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f08d6ab77d019ac45c192ff53f640c0a1221f7db1c578cc2fc5cc5157738d5f1",
                                  "typeString": "literal_string \" Not registered\""
                                }
                              ],
                              "overloadedDeclarations": [
                                221,
                                222
                              ],
                              "referencedDeclaration": 222,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 27,
                            "name": "Identifier",
                            "src": "702:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Registered",
                              "referencedDeclaration": 11,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 28,
                                    "name": "Identifier",
                                    "src": "710:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 29,
                                        "name": "Identifier",
                                        "src": "719:3:0"
                                      }
                                    ],
                                    "id": 30,
                                    "name": "MemberAccess",
                                    "src": "719:10:0"
                                  }
                                ],
                                "id": 31,
                                "name": "IndexAccess",
                                "src": "710:20:0"
                              }
                            ],
                            "id": 32,
                            "name": "MemberAccess",
                            "src": "710:31:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "204e6f742072656769737465726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \" Not registered\"",
                              "value": " Not registered"
                            },
                            "id": 33,
                            "name": "Literal",
                            "src": "742:17:0"
                          }
                        ],
                        "id": 34,
                        "name": "FunctionCall",
                        "src": "702:58:0"
                      }
                    ],
                    "id": 35,
                    "name": "ExpressionStatement",
                    "src": "702:58:0"
                  },
                  {
                    "id": 36,
                    "name": "PlaceholderStatement",
                    "src": "771:1:0"
                  }
                ],
                "id": 37,
                "name": "Block",
                "src": "691:89:0"
              }
            ],
            "id": 38,
            "name": "ModifierDefinition",
            "src": "671:109:0"
          },
          {
            "attributes": {
              "documentation": "@dev Registers a user as Vehicle\n@param _Identification  unique Identification of the vehicle\n@param _CollisionCount happend count of collision",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerVehicle",
              "scope": 203,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_Identification",
                      "scope": 104,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 39,
                        "name": "ElementaryTypeName",
                        "src": "1001:6:0"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "1001:29:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_CollisionCount",
                      "scope": 104,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "1031:4:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "1031:20:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "1000:52:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 44,
                "name": "ParameterList",
                "src": "1060:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_045cf00bc6c7d8294343d975c3a4a3e2c32bc18446fad6f0a4ff71f29a1170d5",
                                  "typeString": "literal_string \" Already registered\""
                                }
                              ],
                              "overloadedDeclarations": [
                                221,
                                222
                              ],
                              "referencedDeclaration": 222,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "1073:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Registered",
                                  "referencedDeclaration": 11,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct TrafficRecord.Vehicle storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 16,
                                          "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                          "value": "vehicles"
                                        },
                                        "id": 46,
                                        "name": "Identifier",
                                        "src": "1082:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 218,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 47,
                                            "name": "Identifier",
                                            "src": "1091:3:0"
                                          }
                                        ],
                                        "id": 48,
                                        "name": "MemberAccess",
                                        "src": "1091:10:0"
                                      }
                                    ],
                                    "id": 49,
                                    "name": "IndexAccess",
                                    "src": "1082:20:0"
                                  }
                                ],
                                "id": 50,
                                "name": "MemberAccess",
                                "src": "1082:31:0"
                              }
                            ],
                            "id": 51,
                            "name": "UnaryOperation",
                            "src": "1081:32:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "20416c72656164792072656769737465726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \" Already registered\"",
                              "value": " Already registered"
                            },
                            "id": 52,
                            "name": "Literal",
                            "src": "1114:21:0"
                          }
                        ],
                        "id": 53,
                        "name": "FunctionCall",
                        "src": "1073:63:0"
                      }
                    ],
                    "id": 54,
                    "name": "ExpressionStatement",
                    "src": "1073:63:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        56
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "vehicle",
                          "scope": 103,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct TrafficRecord.Vehicle",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Vehicle",
                              "referencedDeclaration": 12,
                              "type": "struct TrafficRecord.Vehicle"
                            },
                            "id": 55,
                            "name": "UserDefinedTypeName",
                            "src": "1147:7:0"
                          }
                        ],
                        "id": 56,
                        "name": "VariableDeclaration",
                        "src": "1147:23:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct TrafficRecord.Vehicle storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 16,
                              "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                              "value": "vehicles"
                            },
                            "id": 57,
                            "name": "Identifier",
                            "src": "1173:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 218,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 58,
                                "name": "Identifier",
                                "src": "1182:3:0"
                              }
                            ],
                            "id": 59,
                            "name": "MemberAccess",
                            "src": "1182:10:0"
                          }
                        ],
                        "id": 60,
                        "name": "IndexAccess",
                        "src": "1173:20:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclarationStatement",
                    "src": "1147:46:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "uint256",
                              "value": "vehicle_id"
                            },
                            "id": 62,
                            "name": "Identifier",
                            "src": "1204:10:0"
                          }
                        ],
                        "id": 63,
                        "name": "UnaryOperation",
                        "src": "1204:12:0"
                      }
                    ],
                    "id": 64,
                    "name": "ExpressionStatement",
                    "src": "1204:12:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Id",
                              "referencedDeclaration": 3,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "struct TrafficRecord.Vehicle storage pointer",
                                  "value": "vehicle"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "1227:7:0"
                              }
                            ],
                            "id": 67,
                            "name": "MemberAccess",
                            "src": "1227:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "uint256",
                              "value": "vehicle_id"
                            },
                            "id": 68,
                            "name": "Identifier",
                            "src": "1240:10:0"
                          }
                        ],
                        "id": 69,
                        "name": "Assignment",
                        "src": "1227:23:0"
                      }
                    ],
                    "id": 70,
                    "name": "ExpressionStatement",
                    "src": "1227:23:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Identification",
                              "referencedDeclaration": 5,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "struct TrafficRecord.Vehicle storage pointer",
                                  "value": "vehicle"
                                },
                                "id": 71,
                                "name": "Identifier",
                                "src": "1261:7:0"
                              }
                            ],
                            "id": 73,
                            "name": "MemberAccess",
                            "src": "1261:22:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "string memory",
                              "value": "_Identification"
                            },
                            "id": 74,
                            "name": "Identifier",
                            "src": "1286:15:0"
                          }
                        ],
                        "id": 75,
                        "name": "Assignment",
                        "src": "1261:40:0"
                      }
                    ],
                    "id": 76,
                    "name": "ExpressionStatement",
                    "src": "1261:40:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "CollisionCount",
                              "referencedDeclaration": 7,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "struct TrafficRecord.Vehicle storage pointer",
                                  "value": "vehicle"
                                },
                                "id": 77,
                                "name": "Identifier",
                                "src": "1312:7:0"
                              }
                            ],
                            "id": 79,
                            "name": "MemberAccess",
                            "src": "1312:22:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42,
                              "type": "uint256",
                              "value": "_CollisionCount"
                            },
                            "id": 80,
                            "name": "Identifier",
                            "src": "1337:15:0"
                          }
                        ],
                        "id": 81,
                        "name": "Assignment",
                        "src": "1312:40:0"
                      }
                    ],
                    "id": 82,
                    "name": "ExpressionStatement",
                    "src": "1312:40:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Registered",
                              "referencedDeclaration": 11,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "struct TrafficRecord.Vehicle storage pointer",
                                  "value": "vehicle"
                                },
                                "id": 83,
                                "name": "Identifier",
                                "src": "1363:7:0"
                              }
                            ],
                            "id": 85,
                            "name": "MemberAccess",
                            "src": "1363:18:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 86,
                            "name": "Literal",
                            "src": "1384:4:0"
                          }
                        ],
                        "id": 87,
                        "name": "Assignment",
                        "src": "1363:25:0"
                      }
                    ],
                    "id": 88,
                    "name": "ExpressionStatement",
                    "src": "1363:25:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Vehicle_$12_storage",
                                  "typeString": "struct TrafficRecord.Vehicle storage ref"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct TrafficRecord.Vehicle storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 19,
                                  "type": "struct TrafficRecord.Vehicle storage ref[] storage ref",
                                  "value": "vehicle_record"
                                },
                                "id": 89,
                                "name": "Identifier",
                                "src": "1399:14:0"
                              }
                            ],
                            "id": 91,
                            "name": "MemberAccess",
                            "src": "1399:19:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct TrafficRecord.Vehicle storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                  "value": "vehicles"
                                },
                                "id": 92,
                                "name": "Identifier",
                                "src": "1419:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 218,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 93,
                                    "name": "Identifier",
                                    "src": "1428:3:0"
                                  }
                                ],
                                "id": 94,
                                "name": "MemberAccess",
                                "src": "1428:10:0"
                              }
                            ],
                            "id": 95,
                            "name": "IndexAccess",
                            "src": "1419:20:0"
                          }
                        ],
                        "id": 96,
                        "name": "FunctionCall",
                        "src": "1399:41:0"
                      }
                    ],
                    "id": 97,
                    "name": "ExpressionStatement",
                    "src": "1399:41:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "function (uint256)",
                              "value": "vehicleRegistered"
                            },
                            "id": 98,
                            "name": "Identifier",
                            "src": "1456:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Id",
                              "referencedDeclaration": 3,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "struct TrafficRecord.Vehicle storage pointer",
                                  "value": "vehicle"
                                },
                                "id": 99,
                                "name": "Identifier",
                                "src": "1474:7:0"
                              }
                            ],
                            "id": 100,
                            "name": "MemberAccess",
                            "src": "1474:10:0"
                          }
                        ],
                        "id": 101,
                        "name": "FunctionCall",
                        "src": "1456:29:0"
                      }
                    ],
                    "id": 102,
                    "name": "EmitStatement",
                    "src": "1451:34:0"
                  }
                ],
                "id": 103,
                "name": "Block",
                "src": "1060:435:0"
              }
            ],
            "id": 104,
            "name": "FunctionDefinition",
            "src": "976:519:0"
          },
          {
            "attributes": {
              "documentation": "@dev Add new EDRInfo to a registered Vehicle (only one inforamtion at a time)\n@param _EDRInfo Information related to event recorder",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addNewEDRInfo",
              "scope": 203,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_EDRInfo",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 105,
                        "name": "ElementaryTypeName",
                        "src": "1705:6:0"
                      }
                    ],
                    "id": 106,
                    "name": "VariableDeclaration",
                    "src": "1705:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_CollisionCount",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 107,
                        "name": "ElementaryTypeName",
                        "src": "1729:4:0"
                      }
                    ],
                    "id": 108,
                    "name": "VariableDeclaration",
                    "src": "1729:20:0"
                  }
                ],
                "id": 109,
                "name": "ParameterList",
                "src": "1704:46:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 112,
                "name": "ParameterList",
                "src": "1769:0:0"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 38,
                      "type": "modifier ()",
                      "value": "onlyVehicle"
                    },
                    "id": 110,
                    "name": "Identifier",
                    "src": "1758:11:0"
                  }
                ],
                "id": 111,
                "name": "ModifierInvocation",
                "src": "1758:11:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "EDRInfo",
                              "referencedDeclaration": 9,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 113,
                                    "name": "Identifier",
                                    "src": "1782:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 114,
                                        "name": "Identifier",
                                        "src": "1791:3:0"
                                      }
                                    ],
                                    "id": 115,
                                    "name": "MemberAccess",
                                    "src": "1791:10:0"
                                  }
                                ],
                                "id": 116,
                                "name": "IndexAccess",
                                "src": "1782:20:0"
                              }
                            ],
                            "id": 117,
                            "name": "MemberAccess",
                            "src": "1782:28:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 106,
                              "type": "string memory",
                              "value": "_EDRInfo"
                            },
                            "id": 118,
                            "name": "Identifier",
                            "src": "1813:8:0"
                          }
                        ],
                        "id": 119,
                        "name": "Assignment",
                        "src": "1782:39:0"
                      }
                    ],
                    "id": 120,
                    "name": "ExpressionStatement",
                    "src": "1782:39:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "CollisionCount",
                              "referencedDeclaration": 7,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 121,
                                    "name": "Identifier",
                                    "src": "1832:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 122,
                                        "name": "Identifier",
                                        "src": "1841:3:0"
                                      }
                                    ],
                                    "id": 123,
                                    "name": "MemberAccess",
                                    "src": "1841:10:0"
                                  }
                                ],
                                "id": 124,
                                "name": "IndexAccess",
                                "src": "1832:20:0"
                              }
                            ],
                            "id": 125,
                            "name": "MemberAccess",
                            "src": "1832:35:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 108,
                              "type": "uint256",
                              "value": "_CollisionCount"
                            },
                            "id": 126,
                            "name": "Identifier",
                            "src": "1870:15:0"
                          }
                        ],
                        "id": 127,
                        "name": "Assignment",
                        "src": "1832:53:0"
                      }
                    ],
                    "id": 128,
                    "name": "ExpressionStatement",
                    "src": "1832:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "CollisionCount",
                              "referencedDeclaration": 7,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 19,
                                      "type": "struct TrafficRecord.Vehicle storage ref[] storage ref",
                                      "value": "vehicle_record"
                                    },
                                    "id": 129,
                                    "name": "Identifier",
                                    "src": "1896:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Id",
                                          "referencedDeclaration": 3,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct TrafficRecord.Vehicle storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 16,
                                                  "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                                  "value": "vehicles"
                                                },
                                                "id": 130,
                                                "name": "Identifier",
                                                "src": "1911:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 218,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 131,
                                                    "name": "Identifier",
                                                    "src": "1920:3:0"
                                                  }
                                                ],
                                                "id": 132,
                                                "name": "MemberAccess",
                                                "src": "1920:10:0"
                                              }
                                            ],
                                            "id": 133,
                                            "name": "IndexAccess",
                                            "src": "1911:20:0"
                                          }
                                        ],
                                        "id": 134,
                                        "name": "MemberAccess",
                                        "src": "1911:23:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 135,
                                        "name": "Literal",
                                        "src": "1937:1:0"
                                      }
                                    ],
                                    "id": 136,
                                    "name": "BinaryOperation",
                                    "src": "1911:27:0"
                                  }
                                ],
                                "id": 137,
                                "name": "IndexAccess",
                                "src": "1896:43:0"
                              }
                            ],
                            "id": 138,
                            "name": "MemberAccess",
                            "src": "1896:58:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 108,
                              "type": "uint256",
                              "value": "_CollisionCount"
                            },
                            "id": 139,
                            "name": "Identifier",
                            "src": "1957:15:0"
                          }
                        ],
                        "id": 140,
                        "name": "Assignment",
                        "src": "1896:76:0"
                      }
                    ],
                    "id": 141,
                    "name": "ExpressionStatement",
                    "src": "1896:76:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "EDRInfo",
                              "referencedDeclaration": 9,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 19,
                                      "type": "struct TrafficRecord.Vehicle storage ref[] storage ref",
                                      "value": "vehicle_record"
                                    },
                                    "id": 142,
                                    "name": "Identifier",
                                    "src": "1983:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Id",
                                          "referencedDeclaration": 3,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct TrafficRecord.Vehicle storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 16,
                                                  "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                                  "value": "vehicles"
                                                },
                                                "id": 143,
                                                "name": "Identifier",
                                                "src": "1998:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 218,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 144,
                                                    "name": "Identifier",
                                                    "src": "2007:3:0"
                                                  }
                                                ],
                                                "id": 145,
                                                "name": "MemberAccess",
                                                "src": "2007:10:0"
                                              }
                                            ],
                                            "id": 146,
                                            "name": "IndexAccess",
                                            "src": "1998:20:0"
                                          }
                                        ],
                                        "id": 147,
                                        "name": "MemberAccess",
                                        "src": "1998:23:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 148,
                                        "name": "Literal",
                                        "src": "2024:1:0"
                                      }
                                    ],
                                    "id": 149,
                                    "name": "BinaryOperation",
                                    "src": "1998:27:0"
                                  }
                                ],
                                "id": 150,
                                "name": "IndexAccess",
                                "src": "1983:43:0"
                              }
                            ],
                            "id": 151,
                            "name": "MemberAccess",
                            "src": "1983:51:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 106,
                              "type": "string memory",
                              "value": "_EDRInfo"
                            },
                            "id": 152,
                            "name": "Identifier",
                            "src": "2037:8:0"
                          }
                        ],
                        "id": 153,
                        "name": "Assignment",
                        "src": "1983:62:0"
                      }
                    ],
                    "id": 154,
                    "name": "ExpressionStatement",
                    "src": "1983:62:0"
                  }
                ],
                "id": 155,
                "name": "Block",
                "src": "1769:286:0"
              }
            ],
            "id": 156,
            "name": "FunctionDefinition",
            "src": "1682:373:0"
          },
          {
            "attributes": {
              "documentation": "@dev View record of the Vehicle only by itself\n@return id Id of the Vehicle struct\n@return CollisionCount  collsions count of the Vehicle accident\n@return Identification Identification of the Vehicle\n@return EDRInfo All the EDRInfo of the Vehicle",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "viewRecord",
              "scope": 203,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 157,
                "name": "ParameterList",
                "src": "2391:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "id",
                      "scope": 202,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 160,
                        "name": "ElementaryTypeName",
                        "src": "2426:4:0"
                      }
                    ],
                    "id": 161,
                    "name": "VariableDeclaration",
                    "src": "2426:7:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "CollisionCount",
                      "scope": 202,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 162,
                        "name": "ElementaryTypeName",
                        "src": "2434:4:0"
                      }
                    ],
                    "id": 163,
                    "name": "VariableDeclaration",
                    "src": "2434:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "Identification",
                      "scope": 202,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 164,
                        "name": "ElementaryTypeName",
                        "src": "2454:6:0"
                      }
                    ],
                    "id": 165,
                    "name": "VariableDeclaration",
                    "src": "2454:28:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "EDRInfo",
                      "scope": 202,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 166,
                        "name": "ElementaryTypeName",
                        "src": "2483:6:0"
                      }
                    ],
                    "id": 167,
                    "name": "VariableDeclaration",
                    "src": "2483:21:0"
                  }
                ],
                "id": 168,
                "name": "ParameterList",
                "src": "2425:80:0"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 38,
                      "type": "modifier ()",
                      "value": "onlyVehicle"
                    },
                    "id": 158,
                    "name": "Identifier",
                    "src": "2406:11:0"
                  }
                ],
                "id": 159,
                "name": "ModifierInvocation",
                "src": "2406:11:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 161,
                              "type": "uint256",
                              "value": "id"
                            },
                            "id": 169,
                            "name": "Identifier",
                            "src": "2519:2:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Id",
                              "referencedDeclaration": 3,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 170,
                                    "name": "Identifier",
                                    "src": "2524:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 171,
                                        "name": "Identifier",
                                        "src": "2533:3:0"
                                      }
                                    ],
                                    "id": 172,
                                    "name": "MemberAccess",
                                    "src": "2533:10:0"
                                  }
                                ],
                                "id": 173,
                                "name": "IndexAccess",
                                "src": "2524:20:0"
                              }
                            ],
                            "id": 174,
                            "name": "MemberAccess",
                            "src": "2524:23:0"
                          }
                        ],
                        "id": 175,
                        "name": "Assignment",
                        "src": "2519:28:0"
                      }
                    ],
                    "id": 176,
                    "name": "ExpressionStatement",
                    "src": "2519:28:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 163,
                              "type": "uint256",
                              "value": "CollisionCount"
                            },
                            "id": 177,
                            "name": "Identifier",
                            "src": "2559:14:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "CollisionCount",
                              "referencedDeclaration": 7,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 178,
                                    "name": "Identifier",
                                    "src": "2576:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 179,
                                        "name": "Identifier",
                                        "src": "2585:3:0"
                                      }
                                    ],
                                    "id": 180,
                                    "name": "MemberAccess",
                                    "src": "2585:10:0"
                                  }
                                ],
                                "id": 181,
                                "name": "IndexAccess",
                                "src": "2576:20:0"
                              }
                            ],
                            "id": 182,
                            "name": "MemberAccess",
                            "src": "2576:35:0"
                          }
                        ],
                        "id": 183,
                        "name": "Assignment",
                        "src": "2559:52:0"
                      }
                    ],
                    "id": 184,
                    "name": "ExpressionStatement",
                    "src": "2559:52:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 165,
                              "type": "string memory",
                              "value": "Identification"
                            },
                            "id": 185,
                            "name": "Identifier",
                            "src": "2623:14:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Identification",
                              "referencedDeclaration": 5,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 186,
                                    "name": "Identifier",
                                    "src": "2640:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 187,
                                        "name": "Identifier",
                                        "src": "2649:3:0"
                                      }
                                    ],
                                    "id": 188,
                                    "name": "MemberAccess",
                                    "src": "2649:10:0"
                                  }
                                ],
                                "id": 189,
                                "name": "IndexAccess",
                                "src": "2640:20:0"
                              }
                            ],
                            "id": 190,
                            "name": "MemberAccess",
                            "src": "2640:35:0"
                          }
                        ],
                        "id": 191,
                        "name": "Assignment",
                        "src": "2623:52:0"
                      }
                    ],
                    "id": 192,
                    "name": "ExpressionStatement",
                    "src": "2623:52:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 167,
                              "type": "string memory",
                              "value": "EDRInfo"
                            },
                            "id": 193,
                            "name": "Identifier",
                            "src": "2687:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "EDRInfo",
                              "referencedDeclaration": 9,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TrafficRecord.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "mapping(address => struct TrafficRecord.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 194,
                                    "name": "Identifier",
                                    "src": "2697:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 218,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 195,
                                        "name": "Identifier",
                                        "src": "2706:3:0"
                                      }
                                    ],
                                    "id": 196,
                                    "name": "MemberAccess",
                                    "src": "2706:10:0"
                                  }
                                ],
                                "id": 197,
                                "name": "IndexAccess",
                                "src": "2697:20:0"
                              }
                            ],
                            "id": 198,
                            "name": "MemberAccess",
                            "src": "2697:28:0"
                          }
                        ],
                        "id": 199,
                        "name": "Assignment",
                        "src": "2687:38:0"
                      }
                    ],
                    "id": 200,
                    "name": "ExpressionStatement",
                    "src": "2687:38:0"
                  }
                ],
                "id": 201,
                "name": "Block",
                "src": "2505:230:0"
              }
            ],
            "id": 202,
            "name": "FunctionDefinition",
            "src": "2372:363:0"
          }
        ],
        "id": 203,
        "name": "ContractDefinition",
        "src": "100:2640:0"
      }
    ],
    "id": 204,
    "name": "SourceUnit",
    "src": "33:2707:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1668004945818": {
      "events": {},
      "links": {},
      "address": "0x3E197e44d4C570359F268f464139b56c4ed3A565",
      "transactionHash": "0xc4be027647d843b1bb9fd2f3c2a5a8bf7d2025504dc8c77037ef771ab0e1c4ba"
    },
    "1668005385062": {
      "events": {},
      "links": {},
      "address": "0xA694EDF2F74a1a46F030eC56166d20425990Ffd3",
      "transactionHash": "0x45e3756f36a85e34c71b945bfe047c0c6c5d215e66c5e51d2ebbe6a662590f93"
    },
    "1668006021113": {
      "events": {},
      "links": {},
      "address": "0xe257835018Aa5f95511aE3C726C038792F414b73",
      "transactionHash": "0xec69e57fb117a39102f3acf3afaf7ed99df8eda1aabbf861b4ce55fe860da92d"
    },
    "1668006478282": {
      "events": {},
      "links": {},
      "address": "0x074b14296DAc6E528D2fBc3385ef359f5A032167",
      "transactionHash": "0xd970fd625e11da275400c19e8c9ea8f9bdc981d47730a8209b076d75fb59f7bf"
    },
    "1675563109382": {
      "events": {},
      "links": {},
      "address": "0x28C34d502289b1d171C8b8f1F2F423eAac8691f4",
      "transactionHash": "0x081e570c32f45aa71195462e96be6fb90d2fb3f9c44289458794097eef23ba95"
    },
    "1677663709372": {
      "events": {},
      "links": {},
      "address": "0x6404e8bF872556dBD8082D9C2C118D4a106a9eE7",
      "transactionHash": "0x5975651003df954b4fab296e931624d64e335dbe71e234dcaa674838624315fc"
    },
    "1677665093063": {
      "events": {},
      "links": {},
      "address": "0x7f1342bc8281a75AD196c227b57976eaC48836F7",
      "transactionHash": "0x449a7f9efeff561cc1e6c3972562385844b28fd41b1caecd311251e1c6ab39d2"
    },
    "1677725000958": {
      "events": {},
      "links": {},
      "address": "0xDfd7eaC8C8348e6115EBCF66e7E958BC108a564E",
      "transactionHash": "0x7a0782ff71a2e5f668d6802b40247d7ae376ca65ac5f17594474ec70f05c2451"
    },
    "1677842690830": {
      "events": {},
      "links": {},
      "address": "0x904062b9C3B1db0fc55eCA62950aa9cD6C7a7190",
      "transactionHash": "0xc70e87d79df4602c8232eeaa46ebfe0856094f507fdda534d7712b422dac99d7"
    },
    "1678935205662": {
      "events": {},
      "links": {},
      "address": "0xA1Cb0452F88b4aF69077253C29508F5F31881e6D",
      "transactionHash": "0x9cfbace63180198cfafd79fc208ee46c71f3631c5badf0e32caddb394983eef0"
    },
    "1678935327825": {
      "events": {},
      "links": {},
      "address": "0x6b5e79A0c9806ac33129B3D0cCD33Bb26FA0830d",
      "transactionHash": "0x020ca1bb416d49f0047318807487b7719d7fc596211ca2add2ded3ccc5aa7319"
    },
    "1678936543168": {
      "events": {},
      "links": {},
      "address": "0x6e0917fc0EEEa7E53EacCCd01489cDc1e7C95093",
      "transactionHash": "0x0872a337e58bc64b3709134bd657fedd2f725adc83e9d23f78a42c5869da6224"
    },
    "1678937871880": {
      "events": {},
      "links": {},
      "address": "0x0fAececbF0C0469A6cE4938490cdCe92992067f9",
      "transactionHash": "0x19abdfd3ba26821ae50c46d4dc5514a829c031056cd0368c16b729adf0afc32a"
    },
    "1678942808324": {
      "events": {},
      "links": {},
      "address": "0x61C097d40450Bc23f3292aA0d1F9ea0a29Cc6C8A",
      "transactionHash": "0xfa50610dbf0768dcdc14a8d92fbfe9c4592093504c64d7404ebd4c5d10cd5ff4"
    },
    "1678953143656": {
      "events": {},
      "links": {},
      "address": "0x33bC27ACe544b041C5701a15bCDC93465D5A9f84",
      "transactionHash": "0x3e6d795bc75ea2be5dc7d9c7d732651744bb90b24c982ed98a880f710b59d725"
    },
    "1678953193359": {
      "events": {},
      "links": {},
      "address": "0xFAa079f69bBC1B70e62422994FE83ff8d8d18a20",
      "transactionHash": "0x164dcddbd60bcca6521f64b05c004e33b639f72b154e5307a803cdf6fc329b58"
    },
    "1678954505509": {
      "events": {},
      "links": {},
      "address": "0x20438C352A4B19A5CdBCE780bB8770083A397476",
      "transactionHash": "0xc9104e114754cd5e4699e495e4ab5e8a0ee80bc6ff1257e39ef4445a1b14552d"
    },
    "1678966473500": {
      "events": {},
      "links": {},
      "address": "0x3Ebd385c77b44f66b7a796F918413D4F2ed66f20",
      "transactionHash": "0x09dace5d57b870874b0f735e3751b8feaaa66f126d9edbd9b986d4d2c0fb460e"
    },
    "1679023011849": {
      "events": {},
      "links": {},
      "address": "0x39C6c3a9f907514A65a461e5357Af7197E70a6e9",
      "transactionHash": "0xf232057c41cd6741acb1c4b51e3ffb5127fdd92ec8790518be5a13b721c42ffb"
    },
    "1679024267118": {
      "events": {},
      "links": {},
      "address": "0xe8534fc6839Bfe9f71185d8308665ED7724320c0",
      "transactionHash": "0xe21369ee1f9a1c67b9499ffd7038a17b87d3daff642b261b9b69773bb8bf824f"
    },
    "1679032670391": {
      "events": {},
      "links": {},
      "address": "0xBD475F3B549AaE13fb9314A4334a0BA0940c2D38",
      "transactionHash": "0x7e5106fe272fcae8514d2c4d7530afb937df2b5e6458850a80703225773f0169"
    },
    "1679568324074": {
      "events": {},
      "links": {},
      "address": "0x04cF4155f56f4Bce42bc8745FD58f58bDa8c3313",
      "transactionHash": "0x9dc738058569b85d29da61fb64d285b7be69d819cc029c082e731993afc55ed3"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-03-23T10:48:58.190Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addNewEDRInfo(string,uint256)": {
        "details": "Add new EDRInfo to a registered Vehicle (only one inforamtion at a time)",
        "params": {
          "_EDRInfo": "Information related to event recorder"
        }
      },
      "registerVehicle(string,uint256)": {
        "details": "Registers a user as Vehicle",
        "params": {
          "_CollisionCount": "happend count of collision",
          "_Identification": "unique Identification of the vehicle"
        }
      },
      "viewRecord()": {
        "details": "View record of the Vehicle only by itself",
        "return": "id Id of the Vehicle structCollisionCount  collsions count of the Vehicle accidentIdentification Identification of the VehicleEDRInfo All the EDRInfo of the Vehicle"
      }
    },
    "title": "Traffic Record. "
  },
  "userdoc": {
    "methods": {}
  }
}